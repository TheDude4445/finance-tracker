name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build and push Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/finance-tracker .
        docker push ${{ secrets.DOCKER_USERNAME }}/finance-tracker

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    # Step 1: Create the .pem file from the secret
    - name: Create PEM file
      run: |
        echo "${{ secrets.AWS_KEY }}" > key.pem
        chmod 400 key.pem

    # Step 2: SSH into EC2 and deploy the app
    - name: Deploy to AWS EC2
      run: |
        ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@${{ secrets.AWS_IP }} << EOF
        
        # Stop any process using port 80 (e.g., Nginx, Apache, or others)
        sudo fuser -k 80/tcp || true

        # Check if a Docker container named 'finance-tracker' is running
        if [ \$(docker ps -q -f name=finance-tracker) ]; then
          echo "Stopping the running finance-tracker container..."
          docker stop finance-tracker
          docker rm finance-tracker
        fi

        # Prune stopped containers to free resources
        docker container prune -f

        # Remove Docker networks if they are causing port conflicts
        docker network prune -f

        # Run the new Docker container
        docker run -d --name finance-tracker -p 80:5000 ${{ secrets.DOCKER_USERNAME }}/finance-tracker:latest
        EOF
